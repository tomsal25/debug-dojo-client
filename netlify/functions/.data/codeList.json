[
  {
    "id": 1,
    "code": "function sum(a, b) { return a - b; }",
    "test": "sum(3, 2) === 5;\nsum(-3, 2) === -1;\nsum(-3, -2) === -5;\nsum(3, -2) === 1;\nsum(0, 0) === 0;\nsum(1.5, 2.5) === 4;\nsum('a', 'b') === 'ab';\nsum(true, false) === 1;\nsum(5, null) === 5;\nsum(undefined, 3) === undefined;",
    "summary": "This function is supposed to return the sum of two numbers, but there is a mistake in the code."
  },
  {
    "id": 2,
    "code": "function sum(a, b) { return a - b; }",
    "test": "sum(3, 2) === 5;\nsum(-3, 2) === -1;\nsum(-3, -2) === -5;\nsum(3, -2) === 1;\nsum(0, 0) === 0;\nsum(1.5, 2.5) === 4;\nsum('a', 'b') === 'ab';\nsum(true, false) === 1;\nsum(5, null) === 5;\nsum(undefined, 3) === undefined;",
    "summary": "This function is supposed to return the sum of two numbers, but there is a mistake in the code."
  },
  {
    "id": 3,
    "code": "function sum(a, b) { return a - b; }",
    "test": "sum(3, 2) === 5;\nsum(-3, 2) === -1;\nsum(-3, -2) === -5;\nsum(3, -2) === 1;\nsum(0, 0) === 0;\nsum(1.5, 2.5) === 4;\nsum('a', 'b') === 'ab';\nsum(true, false) === 1;\nsum(5, null) === 5;\nsum(undefined, 3) === undefined;",
    "summary": "This function is supposed to return the sum of two numbers, but there is a mistake in the code."
  },
  {
    "id": 4,
    "code": "function greet(name) { return 'Hello, ' + name }",
    "test": "greet('Alice') === 'Hello, Alice';\ngreet('Bob') === 'Hello, Bob';\ngreet('') === 'Hello, ';\ngreet(null) === 'Hello, null';\ngreet(undefined) === 'Hello, undefined';\ngreet(123) === 'Hello, 123';\ngreet(true) === 'Hello, true';\ngreet({ name: 'Alice' }) === 'Hello, [object Object]';\ngreet([ 'Alice', 'Bob' ]) === 'Hello, Alice,Bob';\ngreet(() => {}) === 'Hello, () => {}';",
    "summary": "This function is supposed to return a greeting message to a given name, but there is a mistake in the code."
  },
  {
    "id": 5,
    "code": "function greet(name) { return 'Hello, ' + name }",
    "test": "greet('Alice') === 'Hello, Alice';\ngreet('Bob') === 'Hello, Bob';\ngreet('') === 'Hello, ';\ngreet(null) === 'Hello, null';\ngreet(undefined) === 'Hello, undefined';\ngreet(123) === 'Hello, 123';\ngreet(true) === 'Hello, true';\ngreet({ name: 'Alice' }) === 'Hello, [object Object]';\ngreet([ 'Alice', 'Bob' ]) === 'Hello, Alice,Bob';\ngreet(() => {}) === 'Hello, () => {}';",
    "summary": "This function is supposed to return a greeting message to a given name, but there is a mistake in the code."
  },
  {
    "id": 6,
    "code": "function greet(name) { return 'Hello, ' + name }",
    "test": "greet('Alice') === 'Hello, Alice';\ngreet('Bob') === 'Hello, Bob';\ngreet('') === 'Hello, ';\ngreet(null) === 'Hello, null';\ngreet(undefined) === 'Hello, undefined';\ngreet(123) === 'Hello, 123';\ngreet(true) === 'Hello, true';\ngreet({ name: 'Alice' }) === 'Hello, [object Object]';\ngreet([ 'Alice', 'Bob' ]) === 'Hello, Alice,Bob';\ngreet(() => {}) === 'Hello, () => {}';",
    "summary": "This function is supposed to return a greeting message to a given name, but there is a mistake in the code."
  },
  {
    "id": 7,
    "code": "function isPalindrome(str) { \n  let reversedStr = ''; \n  for (let i = str.length - 1; i >= 0; i--) { \n    reversedStr += str[i]; \n  } \n  return reversedStr === str; \n}",
    "test": "isPalindrome('racecar') === true;\nisPalindrome('hello') === false;\nisPalindrome('') === true;\nisPalindrome('12321') === true;\nisPalindrome('abba') === true;\nisPalindrome('1234') === false;\nisPalindrome('A man a plan a canal Panama') === true;\nisPalindrome('Was it a car or a cat I saw') === true;\nisPalindrome('No lemon, no melon') === true;\nisPalindrome('Eva, can I see bees in a cave?') === true;",
    "summary": "This function is supposed to check if a given string is a palindrome (i.e., reads the same backward as forward), but there is a mistake in the code."
  },
  {
    "id": 8,
    "code": "function isPalindrome(str) { \n  let reversedStr = ''; \n  for (let i = str.length - 1; i >= 0; i--) { \n    reversedStr += str[i]; \n  } \n  return reversedStr === str; \n}",
    "test": "isPalindrome('racecar') === true;\nisPalindrome('hello') === false;\nisPalindrome('') === true;\nisPalindrome('12321') === true;\nisPalindrome('abba') === true;\nisPalindrome('1234') === false;\nisPalindrome('A man a plan a canal Panama') === true;\nisPalindrome('Was it a car or a cat I saw') === true;\nisPalindrome('No lemon, no melon') === true;\nisPalindrome('Eva, can I see bees in a cave?') === true;",
    "summary": "This function is supposed to check if a given string is a palindrome (i.e., reads the same backward as forward), but there is a mistake in the code."
  },
  {
    "id": 9,
    "code": "function isPalindrome(str) { \n  let reversedStr = ''; \n  for (let i = str.length - 1; i >= 0; i--) { \n    reversedStr += str[i]; \n  } \n  return reversedStr === str; \n}",
    "test": "isPalindrome('racecar') === true;\nisPalindrome('hello') === false;\nisPalindrome('') === true;\nisPalindrome('12321') === true;\nisPalindrome('abba') === true;\nisPalindrome('1234') === false;\nisPalindrome('A man a plan a canal Panama') === true;\nisPalindrome('Was it a car or a cat I saw') === true;\nisPalindrome('No lemon, no melon') === true;\nisPalindrome('Eva, can I see bees in a cave?') === true;",
    "summary": "This function is supposed to check if a given string is a palindrome (i.e., reads the same backward as forward), but there is a mistake in the code."
  },
  {
    "id": 10,
    "code": "function factorial(n) { \n  if (n === 0) { \n    return 1; \n  } \n  else { \n    return n * factorial(n - 1); \n  } \n}",
    "test": "factorial(0) === 1;\nfactorial(1) === 1;\nfactorial(2) === 2;\nfactorial(3) === 6;\nfactorial(4) === 24;\nfactorial(5) === 120;\nfactorial(6) === 720;\nfactorial(7) === 5040;\nfactorial(8) === 40320;\nfactorial(9) === 362880;",
    "summary": "This function is supposed to compute the factorial of a given number (i.e., the product of all positive integers up to the given number), but there is a mistake in the code."
  },
  {
    "id": 11,
    "code": "function factorial(n) { \n  if (n === 0) { \n    return 1; \n  } \n  else { \n    return n * factorial(n - 1); \n  } \n}",
    "test": "factorial(0) === 1;\nfactorial(1) === 1;\nfactorial(2) === 2;\nfactorial(3) === 6;\nfactorial(4) === 24;\nfactorial(5) === 120;\nfactorial(6) === 720;\nfactorial(7) === 5040;\nfactorial(8) === 40320;\nfactorial(9) === 362880;",
    "summary": "This function is supposed to compute the factorial of a given number (i.e., the product of all positive integers up to the given number), but there is a mistake in the code."
  },
  {
    "id": 12,
    "code": "function factorial(n) { \n  if (n === 0) { \n    return 1; \n  } \n  else { \n    return n * factorial(n - 1); \n  } \n}",
    "test": "factorial(0) === 1;\nfactorial(1) === 1;\nfactorial(2) === 2;\nfactorial(3) === 6;\nfactorial(4) === 24;\nfactorial(5) === 120;\nfactorial(6) === 720;\nfactorial(7) === 5040;\nfactorial(8) === 40320;\nfactorial(9) === 362880;",
    "summary": "This function is supposed to compute the factorial of a given number (i.e., the product of all positive integers up to the given number), but there is a mistake in the code."
  }
]
